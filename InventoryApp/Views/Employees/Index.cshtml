@model IEnumerable<InventoryApp.Models.Employee>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";


    //Building a button for Edit
    Dictionary<string, object> editButton = new Dictionary<string, object>();
    editButton.Add("class", "btn-primary");

}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsActive)
        </th>
        <th>
            Position
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsActive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.lk_EmployeeTypes.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>

@(Html.EJ().Grid<InventoryApp.Models.Employee>("FlatGrid")

            .Datasource(dataSource => dataSource.URL("/Employees/InlineDataSource")
                                      .UpdateURL("/Employees/InlineEdit")
                                      .RemoveURL("/Employees/InlineRemove")
                                      .InsertURL("/Employees/InlineInsert").Adaptor(AdaptorType.UrlAdaptor))
            .AllowPaging()

            .AllowSelection()

            .AllowGrouping()

            .FilterSettings(d => d.FilterType(FilterType.FilterBar))

            .AllowFiltering()

            .EditSettings(e => { e.AllowEditing().EditMode(EditMode.InlineForm).AllowDeleting().ShowDeleteConfirmDialog().AllowAdding(); })

            .ToolbarSettings(toolbar =>
            {
                toolbar.ShowToolbar().ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.Edit);
                    items.AddTool(ToolBarItems.Delete);
                    items.AddTool(ToolBarItems.Add);
                });
            })
            .Columns(col =>
            {
                col.Field("ID").HeaderText("Id").IsPrimaryKey(true).Visible(false).Add();

                col.Field("FirstName").HeaderText("First name").Add();

                col.Field("LastName").HeaderText("Last name").Add();

                col.Field("IsActive").HeaderText("Is Active").Add();

                col.Field("LK_EmployeeTypesID").HeaderText("Position").DataSource((IEnumerable<object>)ViewBag.DatasourceEmployeeTypes).EditType(EditingType.Dropdown).Add();

            })
)




@section Scripts {
    <script>

        

        function detailsButton(args) {
            var grid = $("#FlatGrid").data("ejGrid");
            var recordId = grid.getSelectedRecords()[0].ID;
            Action("Details", recordId);
        }
       
        function editButton(args) {
            var grid = $("#FlatGrid").data("ejGrid");
            var recordId = grid.getSelectedRecords()[0].ID;
            Action("Edit", recordId);
            //console.log(JSON.stringify(grid.getSelectedRecords()));
            //window.location.href = "/Employees/Edit/" + data;
        }

        function deleteButton(args) {
            var grid = $("#FlatGrid").data("ejGrid");
            var recordId = grid.getSelectedRecords()[0].ID;
            Action("Delete", recordId);
        }

        function Action(actionType, recordId) {
            var Action = "Employees";
            /*switch (actionType) {
                case "Edit":
                    url = "/Edit/";
                    break;
                case "Details":
                    url = "/Details/";
                    break;
                case "Delete":
                    url = "/Delete/";
                    break;
                default:
                    break;
            }*/

            window.location.href = "/" + Action + "/" + actionType + "/" + recordId;
        }

    </script>
}